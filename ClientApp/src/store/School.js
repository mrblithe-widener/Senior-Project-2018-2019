const requestMath = "REQUEST_MATH";

const initalState = {Math_Scores:undefined};

async function makeApiCall(url) {
    try {
        const response = await fetch(url);
        if (!response.ok) {
            if (response.status >= 400 && response.status < 500)
                throw new Error("Not Found");
            else
                throw new Error("A server error occured")
        } else
            return await response.json();
    } catch (e) {
        throw new Error(e);
    }
}

export const actionCreators = {
    requestMath:ncessch => async (dispatch, getState)=>{
        const url = `api/Math/${ncessch}`;
        const scores = makeApiCall(url);
        dispatch({type:requestMath, Math_Scores:scores});
    }
}


/**
 * @function reducer handles the actions generated by the action creates and
 * updates that state as needed.
 */
export const reducer = (state, action)=>{
    switch(action.type){
        case requestMath:
        return {...state, Math_Scores:action.Math_Scores};
        default:
        return state || initalState;
    }
}
