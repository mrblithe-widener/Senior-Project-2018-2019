/**
 * Constants which the action creators will create and the reducer will
 * respond to
 */
export const createError = "CREATE_ERROR";
export const clearError = "CLEAR_ERROR";

/**
 * Inital state of the reducer
 */
const initalState = {errorMessage:undefined}


/**
 * These action creates Create and Clear errors respectivly
 * The action creator dispatches the action request to the reducer for processing
 */
export const errorActionCreators = {
	createError:msg => (dispatch)=>{
		dispatch({type:createError, errorMessage:msg});
	},
	clearError: ()=> (dispatch)=>{
		dispatch({type:clearError});
	}
}


/**
 * This is the error reducer which updates the state for the error store
 * @param {the current state of the error store} state 
 * @param {the action generated by the action creator containg update information} action 
 */
export const reducer  = (state, action)=>{
	switch(action.type){
		case createError:
			return {...state, errorMessage:action.errorMessage};
		case clearError:
			return initalState;
		default:
			return state || initalState;
	}
}
